/**************************************************************************************************************/
/* CURRENCT EXECUTED SQL SCRIPT: */
/**************************************************************************************************************/
--SQL_1	
INSERT INTO TAXES_INFO_TA(TA_TABLE, CODE, TYPE, NAME, EVENT, DEAL_TYPE, ACUMULATIVE_TAX, DDC, CURRENCY_FOR_CHARGING, PREF_PERSENTAGE_BASE, PREF_PLAN_BASE_ON_DAILY_TURNOVER)   
SELECT DISTINCT   'PREV_COMMON_TA' AS TA_TABLE,   TAX.TAX_CODE AS CODE,   'Tax' AS TYPE,   TAX.TAX_NAME AS NAME,   EVT.EVENT_NAME AS EVENT,   EVT2D.DEAL_TYPE AS DEAL_TYPE,   (CASE WHEN EVT.EVENT_TYPE IN(1, 5, 201, 366, 367, 368, 369) THEN (DBO.CHECKBIT(TAX.STATUS, 16) + 1)%2 ELSE 0 END) AS ACUMULATIVE_TAX,   TAX.DDS_TAX AS DDC,   2 AS CURRENCY_FOR_CHARGING,    NULL AS PREF_PERSENTAGE_BASE,   NULL AS PREF_PLAN_BASE_ON_DAILY_TURNOVER   
FROM PREV_COMMON_TA AS REG WITH(NOLOCK)   
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.TAXES AS TAX WITH(NOLOCK)
	ON REG.TAX_CODE = TAX.TAX_CODE   
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.TAX_EVENTS_TO_DEALS AS EVT2D WITH(NOLOCK)
	ON TAX.EVENT_TO_DEAL_CODE = EVT2D.CODE   
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.EVT_EVENTS AS EVT WITH(NOLOCK)
	ON EVT2D.EVENT_CODE = EVT.EVENT_TYPE   WHERE REG.TAX_CODE > 0
GO

/**************************************************************************************************************/
--SQL_2	
INSERT INTO TAXES_INFO_COMMISSION_TA(    TAX_CODE,    COMMISSION_CODE,    TYPE,    COMMISSION_ORDER,    CONSTANT_SUM,    PERCENTAGE,    IS_DEFAULT_CURRENCY,    CURRENCY,    FROM_SUM,    UNTIL_SUM,    MIN_SUM,    MAX_SUM,    TAX_OVER_SUM,    INCLUDE_TAX_IN_MIN_MAX,    PREF_WITHOUT_DAILY_TURNOVER)   
SELECT DISTINCT   REG.CODE AS TAX_CODE,   COMM.COMMISSION_CODE AS COMMISSION_CODE,   REG.TYPE AS TYPE,   ROW_NUMBER() OVER(PARTITION BY REG.CODE, CURR.INI ORDER BY REG.CODE, CURR.INI) AS COMMISSION_ORDER,   COMM.CONSTTAX_SUM AS CONSTANT_SUM,   COMM.COMMISSION_PERCENT AS PERCENTAGE,   ITEMS.TYPE_COMMISSION AS IS_DEFAULT_CURRENCY,   CURR.INI AS CURRENCY,   CASE LAG(COMM.COMMISSION_CODE, 1, 0) OVER (ORDER BY REG.CODE, CURR.INI, COMM.COMMISSION_CODE, COMM.UP_TO_SUM) WHEN COMM.COMMISSION_CODE THEN 0.01 + LAG(COMM.UP_TO_SUM, 1, 0) OVER (ORDER BY REG.CODE, CURR.INI, COMM.COMMISSION_CODE, COMM.UP_TO_SUM) ELSE 0 END AS FROM_SUM,   COMM.UP_TO_SUM AS UNTIL_SUM,   COMM.MINIMUM_SUM AS MIN_SUM,   COMM.MAXIMUM_SUM AS MAX_SUM,   COMM.COMMISSION_FLAGS & 1 AS TAX_OVER_SUM,   COMM.COMMISSION_FLAGS & 4 AS INCLUDE_TAX_IN_MIN_MAX,   NULL AS PREF_WITHOUT_DAILY_TURNOVER   
FROM TAXES_INFO_TA AS REG WITH(NOLOCK)   
INNER JOIN    
(    SELECT TAX_CODE, MAX(DATE) AS DATE
	FROM [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.TAX_PLAN_COMMISSIONS WITH(NOLOCK)
	GROUP BY TAX_CODE
) AS PLN_DATE
	ON REG.CODE = PLN_DATE.TAX_CODE
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.TAX_PLAN_COMMISSIONS AS PLN WITH(NOLOCK)
	ON PLN_DATE.TAX_CODE = PLN.TAX_CODE AND PLN_DATE.DATE = PLN.DATE
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.TAX_PLAN_COMMISSIONS_ITEMS AS ITEMS WITH(NOLOCK)
	ON PLN.ID = ITEMS.ID_PLAN
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.NM137 AS COMM WITH(NOLOCK)
	ON ITEMS.COMMISSION_GROUP_CODE = COMM.COMMISSION_CODE
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.DT008 AS CURR WITH(NOLOCK)
	ON COMM.CURRENCY = CURR.CODE
WHERE	REG.TA_TABLE = 'PREV_COMMON_TA'
	AND REG.TYPE = 'Tax'
ORDER BY REG.CODE, CURR.INI, COMM.COMMISSION_CODE, COMM.UP_TO_SUM
GO

/**************************************************************************************************************/
--SQL_3	
INSERT INTO TAXES_INFO_TA(TA_TABLE, CODE, TYPE, NAME, EVENT, DEAL_TYPE, ACUMULATIVE_TAX, DDC, CURRENCY_FOR_CHARGING, PREF_PERSENTAGE_BASE, PREF_PLAN_BASE_ON_DAILY_TURNOVER)
SELECT DISTINCT 'PREV_COMMON_TA' AS TA_TABLE
	,   PREF.CODE AS CODE
	,   'Pref'
	,   PREF.PREFERENCE_NAME	AS NAME
	,   EVT.EVENT_NAME			AS EVENT
	,   PREF.DEAL_TYPE			AS DEAL_TYPE
	,   0						AS ACUMULATIVE_TAX
	,   0						AS DDC
	,	2						AS CURRENCY_FOR_CHARGING
	,	DBO.CHECKBIT(HDR.STATUS, 15) AS PREF_PERSENTAGE_BASE
	,	DBO.CHECKBIT(HDR.STATUS, 16) AS PREF_PLAN_BASE_ON_DAILY_TURNOVER
FROM PREV_COMMON_TA AS REG WITH(NOLOCK)
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.PREFERENCIAL_TAXES AS PREF WITH(NOLOCK)
	ON REG.PREF_CODE = PREF.CODE
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.PREFERENCIAL_EVENTS_TAXES AS PREF_EVT WITH(NOLOCK)
	ON PREF.CODE = PREF_EVT.PREFERENCE_CODE
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.EVT_EVENTS AS EVT WITH(NOLOCK)
	ON PREF_EVT.EVENT_CODE = EVT.EVENT_TYPE
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.PREFERENCIAL_PLANS_HDR AS HDR WITH(NOLOCK)
	ON PREF_EVT.PREF_PLAN_CODE = HDR.CODE
WHERE PREF.PREFERENCE_STATUS = 1 AND PREF.DATE_VALID_TO >= GETDATE()
	AND REG.PREF_CODE > 0
GO

/**************************************************************************************************************/
--SQL_4	
INSERT INTO TAXES_INFO_COMMISSION_TA
	( TAX_CODE, COMMISSION_CODE, TYPE, COMMISSION_ORDER, CONSTANT_SUM, PERCENTAGE, IS_DEFAULT_CURRENCY, CURRENCY
	, FROM_SUM, UNTIL_SUM, MIN_SUM, MAX_SUM, TAX_OVER_SUM,    INCLUDE_TAX_IN_MIN_MAX,    PREF_WITHOUT_DAILY_TURNOVER)
SELECT	REG.CODE AS TAX_CODE,   DTL.CODE AS COMMISSION_CODE,   REG.TYPE AS TYPE
	,   ROW_NUMBER() OVER(PARTITION BY REG.CODE ORDER BY REG.CODE) AS COMMISSION_ORDER
	,   CASE DTL.PREFERENCE_TYPE WHEN 1 THEN DTL.SUM_SOLID ELSE -1 END AS CONSTANT_SUM
	,   CASE DTL.PREFERENCE_TYPE WHEN 0 THEN DTL.[PERCENT] ELSE -1 END AS PERCENTAGE
	,   1 AS IS_DEFAULT_CURRENCY
	,   'X' AS CURRENCY,   DTL.SUM_FOR_TAX_OVER + 0.01 AS FROM_SUM
	,   CASE LEAD(DTL.PREFERENCE_CODE, 1, 0) OVER (ORDER BY REG.CODE, DTL.CODE, DTL.SUM_FOR_TAX_OVER) WHEN DTL.PREFERENCE_CODE THEN LEAD(DTL.SUM_FOR_TAX_OVER, 1, 0) OVER (ORDER BY REG.CODE, DTL.CODE, DTL.SUM_FOR_TAX_OVER) ELSE 99999999999 END AS UNTIL_SUM
	,   DTL.MIN_SUM AS MIN_SUM
	,   DTL.MAX_SUM AS MAX_SUM
	,   0 AS TAX_OVER_SUM
	,   0 AS INCLUDE_TAX_IN_MIN_MAX
	,   DBO.CHECKBIT(DTL.STATUS, 16) AS PREF_WITHOUT_DAILY_TURNOVER
FROM TAXES_INFO_TA AS REG WITH(NOLOCK)
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.PREFERENCIAL_EVENTS_TAXES AS PREF_EVT WITH(NOLOCK)
	ON REG.CODE = PREF_EVT.PREFERENCE_CODE
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.PREFERENCIAL_PLANS_HDR AS HDR WITH(NOLOCK)
	ON PREF_EVT.PREF_PLAN_CODE = HDR.CODE
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.PREFERENCIAL_PLANS AS DTL WITH(NOLOCK)
	ON HDR.CODE = DTL.CODE_PREF_PLAN_HRD
WHERE REG.TA_TABLE = 'PREV_COMMON_TA'
	AND REG.TYPE = 'Pref'
	AND PREF_EVT.TAX_CODE > 0
ORDER BY REG.CODE, DTL.CODE, DTL.SUM_FOR_TAX_OVER
GO

/**************************************************************************************************************/
/* NEW SQL SCRIPT: */
/**************************************************************************************************************/
/* SLQ _1 - OK */
INSERT INTO dbo.[TAXES_INFO_TA]
	( [TA_TABLE], [CODE], [TYPE], [NAME], [EVENT], [DEAL_TYPE], [ACUMULATIVE_TAX], [DDC]
	, [CURRENCY_FOR_CHARGING], [PREF_PERSENTAGE_BASE], [PREF_PLAN_BASE_ON_DAILY_TURNOVER] )
select	N'PREV_COMMON_TA'		AS [TA_TABLE]
	,	[TAX].[TAX_CODE]		AS [CODE]
	,	N'Tax'					AS [TYPE]
	,	[TAX].[TAX_NAME]		AS [NAME]
	,	[EVT].[EVENT_NAME]		AS [EVENT]
	,	[EVT2D].[DEAL_TYPE]		AS [DEAL_TYPE]
	,	[X].[ACUMULATIVE_TAX]	AS [ACUMULATIVE_TAX]
	,	[TAX].[DDS_TAX]			AS [DDC]
	,	2						AS [CURRENCY_FOR_CHARGING]
	,	NULL					AS [PREF_PERSENTAGE_BASE]
	,	NULL					AS [PREF_PLAN_BASE_ON_DAILY_TURNOVER]
from [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].dbo.TAXES [TAX] WITH (NOLOCK)
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].dbo.TAX_EVENTS_TO_DEALS AS [EVT2D] WITH (NOLOCK)
	ON [TAX].[EVENT_TO_DEAL_CODE] = [EVT2D].[CODE]
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].dbo.EVT_EVENTS AS [EVT] WITH (NOLOCK) 
	ON [EVT2D].[EVENT_CODE] = [EVT].[EVENT_TYPE]
CROSS APPLY (
	SELECT 	CASE WHEN [EVT].[EVENT_TYPE] IN (1,5,201,366,367,368,369 )
					THEN (DBO.CHECKBIT([TAX].[STATUS], 16) + 1) % 2
				ELSE 0
			END AS [ACUMULATIVE_TAX]
) [X]
WHERE [EVT2D].[DEAL_TYPE] = 1
GO

/******************************************************************************************************************/
/* SLQ _2 - OK */
INSERT INTO dbo.[TAXES_INFO_COMMISSION_TA]
	( [TAX_CODE], [COMMISSION_CODE], [TYPE], [COMMISSION_ORDER], [CONSTANT_SUM], [PERCENTAGE], [IS_DEFAULT_CURRENCY], [CURRENCY]
	, [FROM_SUM], [UNTIL_SUM], [MIN_SUM], [MAX_SUM], [TAX_OVER_SUM], [INCLUDE_TAX_IN_MIN_MAX], [PREF_WITHOUT_DAILY_TURNOVER] )
SELECT	DISTINCT 
		[REG].[CODE]					AS [TAX_CODE]
	,	[COMM].[COMMISSION_CODE]		AS [COMMISSION_CODE]
	,	N'Tax'							AS [TYPE]
	,	ROW_NUMBER() OVER(PARTITION BY [REG].[CODE], [CURR].[INI] ORDER BY [REG].[CODE], [CURR].[INI] )
										AS [COMMISSION_ORDER]
	,   [COMM].[CONSTTAX_SUM]			AS [CONSTANT_SUM]
	,	[COMM].[COMMISSION_PERCENT]		AS [PERCENTAGE]
	,   [ITEMS].[TYPE_COMMISSION]		AS [IS_DEFAULT_CURRENCY]
	,   [CURR].[INI]					AS [CURRENCY]

	,   CASE LAG([COMM].[COMMISSION_CODE], 1, 0) OVER (ORDER BY [REG].[CODE], [CURR].[INI], [COMM].[COMMISSION_CODE], [COMM].[UP_TO_SUM])
			WHEN [COMM].[COMMISSION_CODE]
			THEN 0.01 + LAG([COMM].[UP_TO_SUM], 1, 0) OVER (ORDER BY [REG].[CODE], [CURR].[INI], [COMM].[COMMISSION_CODE], [COMM].[UP_TO_SUM])
			ELSE 0 END 
										AS [FROM_SUM]
	,   [COMM].[UP_TO_SUM]				AS [UNTIL_SUM]
	,   [COMM].[MINIMUM_SUM]			AS [MIN_SUM]
	,   [COMM].[MAXIMUM_SUM]			AS [MAX_SUM]
	,   [COMM].[COMMISSION_FLAGS] & 1	AS [TAX_OVER_SUM]
	,   [COMM].[COMMISSION_FLAGS] & 4	AS [INCLUDE_TAX_IN_MIN_MAX]
	,   NULL							AS [PREF_WITHOUT_DAILY_TURNOVER]
FROM (
	SELECT [TAX].[TAX_CODE] AS [CODE]
	from [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].dbo.TAXES [TAX] WITH (NOLOCK)
	INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].dbo.TAX_EVENTS_TO_DEALS AS [EVT2D] WITH (NOLOCK)
		ON [TAX].[EVENT_TO_DEAL_CODE] = [EVT2D].[CODE]
	INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].dbo.EVT_EVENTS AS [EVT] WITH (NOLOCK) 
		ON [EVT2D].[EVENT_CODE] = [EVT].[EVENT_TYPE]
	WHERE [EVT2D].[DEAL_TYPE] = 1
) AS [REG] 
INNER JOIN    
(    SELECT [TAX_CODE], MAX([DATE]) AS [DATE]
	FROM [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.[TAX_PLAN_COMMISSIONS] WITH(NOLOCK)
	GROUP BY [TAX_CODE]
) AS [PLN_DATE]
	ON [REG].[CODE] = [PLN_DATE].[TAX_CODE]
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.[TAX_PLAN_COMMISSIONS] AS [PLN] WITH(NOLOCK)
	ON	[PLN_DATE].[TAX_CODE] = [PLN].[TAX_CODE]
	AND [PLN_DATE].[DATE] = [PLN].[DATE]
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.[TAX_PLAN_COMMISSIONS_ITEMS] AS [ITEMS] WITH(NOLOCK)
	ON [PLN].[ID] = [ITEMS].[ID_PLAN]
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.[NM137] AS [COMM] WITH(NOLOCK)
	ON [ITEMS].[COMMISSION_GROUP_CODE] = [COMM].[COMMISSION_CODE]
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.[DT008] AS [CURR] WITH(NOLOCK)
	ON	[COMM].[CURRENCY] = [CURR].[CODE]
GO

/**************************************************************************************************************/
--SQL_3	- OK
INSERT INTO dbo.[TAXES_INFO_TA]
	([TA_TABLE], [CODE], [TYPE], [NAME], [EVENT], [DEAL_TYPE], [ACUMULATIVE_TAX], [DDC], [CURRENCY_FOR_CHARGING], [PREF_PERSENTAGE_BASE], [PREF_PLAN_BASE_ON_DAILY_TURNOVER] )
SELECT DISTINCT N'PREV_COMMON_TA'		AS [TA_TABLE]
	,   [PREF].[CODE]					AS [CODE]
	,   N'Pref'							AS [TYPE]
	,   [PREF].[PREFERENCE_NAME]		AS [NAME]
	,   [EVT].[EVENT_NAME]				AS [EVENT]
	,   [PREF].[DEAL_TYPE]				AS [DEAL_TYPE]
	,   0								AS [ACUMULATIVE_TAX]
	,   0								AS [DDC]
	,	2								AS [CURRENCY_FOR_CHARGING]
	,	DBO.CHECKBIT(HDR.STATUS, 15)	AS [PREF_PERSENTAGE_BASE]
	,	DBO.CHECKBIT(HDR.STATUS, 16)	AS [PREF_PLAN_BASE_ON_DAILY_TURNOVER]
FROM [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.[PREFERENCIAL_TAXES] AS [PREF] WITH(NOLOCK)
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.[PREFERENCIAL_EVENTS_TAXES] AS [PREF_EVT] WITH(NOLOCK)
	ON [PREF].[CODE] = [PREF_EVT].[PREFERENCE_CODE]
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.[EVT_EVENTS] AS [EVT] WITH(NOLOCK)
	ON [PREF_EVT].[EVENT_CODE] = [EVT].[EVENT_TYPE]
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.[PREFERENCIAL_PLANS_HDR] AS [HDR] WITH(NOLOCK)
	ON [PREF_EVT].[PREF_PLAN_CODE] = [HDR].[CODE]
WHERE	[PREF].[PREFERENCE_STATUS]	= 1
	AND [PREF].[DEAL_TYPE]			= 1
	AND [PREF].[DATE_VALID_TO]		>= GETDATE()
GO

/**************************************************************************************************************/
--SQL_4	- OK
INSERT INTO dbo.[TAXES_INFO_COMMISSION_TA]
	( [TAX_CODE], [COMMISSION_CODE], [TYPE], [COMMISSION_ORDER], [CONSTANT_SUM], [PERCENTAGE], [IS_DEFAULT_CURRENCY], [CURRENCY]
	, [FROM_SUM], [UNTIL_SUM], [MIN_SUM], [MAX_SUM], [TAX_OVER_SUM], [INCLUDE_TAX_IN_MIN_MAX], [PREF_WITHOUT_DAILY_TURNOVER] )
SELECT	[PREF_EVT].[PREFERENCE_CODE]	AS [TAX_CODE]
	,	[DTL].[CODE]					AS [COMMISSION_CODE]
	,    N'Pref'						AS [TYPE]
	,   ROW_NUMBER() OVER(PARTITION BY [PREF_EVT].[PREFERENCE_CODE] ORDER BY [PREF_EVT].[PREFERENCE_CODE])
							AS [COMMISSION_ORDER]
	,   CASE [DTL].[PREFERENCE_TYPE] WHEN 1 THEN [DTL].[SUM_SOLID] ELSE -1 END
							AS [CONSTANT_SUM]
	,   CASE [DTL].[PREFERENCE_TYPE] WHEN 0 THEN [DTL].[PERCENT] ELSE -1 END
							AS [PERCENTAGE]
	,   1					AS [IS_DEFAULT_CURRENCY]
	,   'X'					AS [CURRENCY]
	,   ([DTL].[SUM_FOR_TAX_OVER] + 0.01)
							AS [FROM_SUM]
	,   CASE LEAD([DTL].[PREFERENCE_CODE], 1, 0)
			OVER (ORDER BY [PREF_EVT].[PREFERENCE_CODE], [DTL].[CODE], [DTL].[SUM_FOR_TAX_OVER]) WHEN [DTL].[PREFERENCE_CODE] THEN LEAD([DTL].[SUM_FOR_TAX_OVER], 1, 0) 
				OVER (ORDER BY [PREF_EVT].[PREFERENCE_CODE], [DTL].[CODE], [DTL].[SUM_FOR_TAX_OVER]) ELSE 99999999999 END AS [UNTIL_SUM]
	,   [DTL].[MIN_SUM]		AS [MIN_SUM]
	,   [DTL].[MAX_SUM]		AS [MAX_SUM]
	,   0					AS [TAX_OVER_SUM]
	,   0					AS [INCLUDE_TAX_IN_MIN_MAX]
	,   DBO.CHECKBIT([DTL].[STATUS], 16) AS [PREF_WITHOUT_DAILY_TURNOVER]
FROM [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.[PREFERENCIAL_TAXES] AS [PREF] WITH(NOLOCK)
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.[PREFERENCIAL_EVENTS_TAXES] AS [PREF_EVT] WITH(NOLOCK)
	ON [PREF].[CODE] = [PREF_EVT].[PREFERENCE_CODE]
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.PREFERENCIAL_PLANS_HDR AS [HDR] WITH(NOLOCK)
	ON [PREF_EVT].[PREF_PLAN_CODE] = [HDR].[CODE]
INNER JOIN [TESTSERVER51\SQL2016].[BPB_Next_VCSBank_TestAutomation_Online].DBO.PREFERENCIAL_PLANS AS [DTL] WITH(NOLOCK)
	ON HDR.CODE = DTL.CODE_PREF_PLAN_HRD
WHERE	[PREF_EVT].[TAX_CODE]		> 0
	AND [PREF].[PREFERENCE_STATUS]	= 1 
	AND [PREF].[DEAL_TYPE]			= 1
	AND [PREF].[DATE_VALID_TO]		>= GETDATE()
GO
